pipeline {
    agent any
    stages {
        stage('k8s playbook') {
            steps {
                withCredentials([usernamePassword(
                    credentialsId: 'vault_terraform_login',
                    passwordVariable: 'SECRET_ID',
                    usernameVariable: 'ROLE_ID'
                )]) {
                    sh """
                        ~/bin/rocket_hook.sh A '${env.BUILD_TAG} - k8s playbook - STARTED'
                        export VAULT_CAPATH
                        export VAULT_ADDR
                        export CONSUL_CACERT=$VAULT_CAPATH
                        export REQUESTS_CA_BUNDLE=$VAULT_CAPATH
                        . ./vault_consul_setup.bash
                        ansible-playbook -i consul_inventory k8s.yml
                    """
                }
            }
            post {
                success {
                    sh "~/bin/rocket_hook.sh AS '${env.BUILD_TAG} - k8s playbook - DONE'"
                }
                failure {
                    sh "~/bin/rocket_hook.sh AF '${env.BUILD_TAG} - k8s playbook - FAILED'"
                }
            }
        }
    }
    post {
        always {
            cleanWs()
        }
        success {
            sh "~/bin/rocket_hook.sh JS '${env.BUILD_TAG} - DONE'"
        }
        failure {
            sh "~/bin/rocket_hook.sh JF '${env.BUILD_TAG} - FAILED'"
        }
    }
}
